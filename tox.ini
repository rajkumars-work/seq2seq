[tox]
envlist =
  lint
  formatcheck
  types
  # It is good practice to test the library for all supported versions.
  py39,
  py310,
  py311,
isolated_build = true

[testenv]
setenv =
  PIP_INDEX_URL = https://artifactory.spotify.net/artifactory/api/pypi/pypi/simple/
  UV_INDEX_URL = {env:PIP_INDEX_URL:https://artifactory.spotify.net/artifactory/api/pypi/pypi/simple/}
deps = -r{toxinidir}/requirements/requirements-{envname}-dev.txt
commands =
  pytest --junitxml=./test-reports/junit.xml --cov=coglib --cov-report=xml

[testenv:types]
basepython = python3.9
deps = -r{toxinidir}/requirements/requirements-py39-dev.txt
# commands = mypy {toxinidir}/src {toxinidir}/tests

; Check format and lint.
; If it fails, then run tox -e format
[testenv:{lint,formatcheck,format}]
basepython = python3.9
skip_install = true
deps = ruff
commands =
  lint: ruff check --exclude {posargs:{toxinidir}}/src/coglib/spotify --diff {posargs:{toxinidir}}
  formatcheck: ruff format --exclude {posargs:{toxinidir}}/src/coglib/spotify --diff {posargs:{toxinidir}}
  format: ruff check --exclude {posargs:{toxinidir}}/src/coglib/spotify --fix {posargs:{toxinidir}}
  format: ruff format --exclude {posargs:{toxinidir}}/src/coglib/spotify {posargs:{toxinidir}}

[testenv:requirements-py{39,310,311,312}]
; https://backstage.spotify.net/docs/default/component/python/tools/advanced/uv
labels = requirements
deps = uv
skip_install = true
setenv =
  UV_CUSTOM_COMPILE_COMMAND='tox -m requirements'
  {[testenv]setenv}
commands =
  uv pip compile --extra dev --upgrade --prerelease=allow --emit-index-url --generate-hashes --python-platform linux pyproject.toml --output-file=requirements/{envname}-dev.txt
